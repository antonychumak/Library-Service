version: "3"

services:
  db:
    image: postgres:14-alpine
    volumes:
      - .data/db:/var/lib/postgresql/data
    env_file:
      - .env

  app:
    build:
      context: .
    restart: unless-stopped
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db && 
            python manage.py celery_worker &&
            python manage.py migrate &&
            python manage.py initadmin &&
            python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  redis:
    image: redis:7.0.5-alpine
    restart: always

  celery:
    restart: on-failure
    build:
      context: .
    command: celery -A library_service beat -l info
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - app

  celery-beat:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db && python manage.py migrate &&
          celery -A library_service beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - app

#  flower:
#    build: .
#    command: celery -A library_service flower --address=0.0.0.0
#    ports:
#      - "5555:5555"
#    env_file:
#      - .env
#    depends_on:
#      - celery
